from django.shortcuts import render
from django.http import HttpResponse
from django.contrib.auth import authenticate
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from rest_framework.authtoken.models import Token
from api.models import Meeting, SpeakingDescription, Person,MeetingDescription


class DenemeView(APIView):
    def get(self, request):
        if request.user.is_authenticated:
            user_id = request.user.id  # Kullanıcının kimliğini alın

            # Önce mevcut ayın ilk ve son günlerini hesaplayın
            from datetime import date, timedelta
            current_date = date.today()
            first_day_of_month = current_date.replace(day=1)
            last_day_of_month = current_date.replace(day=1, month=current_date.month + 1) - timedelta(days=1)

            # Kullanıcının bu ayki toplantılarını alın
            #meetings_data = Meeting.objects.filter(meeting_date__range=[first_day_of_month, last_day_of_month],userid=user_id)
            meetings_data = Meeting.objects.filter(userid=user_id)

            # Toplam süreyi hesapla
            total_duration_seconds = 0

            for meeting in meetings_data:
                print(meeting)
                meeting_descriptions = MeetingDescription.objects.filter(meeting_id=meeting.meeting_id)

                if meeting_descriptions.exists():
                    start_time = min(md.time for md in meeting_descriptions)
                    end_time = max(md.time for md in meeting_descriptions)
                    print(start_time, end_time)

                    # Başlangıç ve bitiş saatlerini ayrıştırın
                    start_hour, start_minute, start_second = map(int, start_time.strftime("%H:%M:%S").split(':'))
                    end_hour, end_minute, end_second = map(int, end_time.strftime("%H:%M:%S").split(':'))

                    # Başlangıç ve bitiş zamanlarını saniyeye çevirin
                    start_time_seconds = start_hour * 3600 + start_minute * 60 + start_second
                    end_time_seconds = end_hour * 3600 + end_minute * 60 + end_second

                    meeting_duration = end_time_seconds - start_time_seconds
                    total_duration_seconds += meeting_duration

            # Toplam süreyi formatla
            total_meeting_duration = str(timedelta(seconds=total_duration_seconds))

            meeting_count = meetings_data.count()
            print(meeting_count)

            # Ortalama toplantı süresini hesaplayın
            if meeting_count > 0:
                average_meeting_duration_seconds = total_duration_seconds / meeting_count
                average_meeting_duration = str(timedelta(seconds=average_meeting_duration_seconds))
            else:
                average_meeting_duration = "00:00:00"

            print(average_meeting_duration)

            data = "ANANI YİRİM"  # Burada gerçek veriyi yerine kendi verinizi ekleyebilirsiniz
            return Response({"message": data})

def deneme2(request):
    return HttpResponse("ANANI 2 KERE YİRİM")


